{"version":3,"sources":["../lib/utils.jsx"],"names":["getDirectory","getScrollTop","element","rule","directory","console","log","tag","select","Array","isArray","Object","keys","iterator","from","querySelectorAll","map","getNextNode","el","nextElementSibling","findIndex","_","localName","tagIndex","indexOf","item","type","text","innerText","node","nextNode","scrollTop","document","documentElement","body"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QA4CAC,Y,GAAAA,Y;AAjDhB;;;;;AAKO,SAASD,YAAT,CAAsBE,OAAtB,EAA8BC,IAA9B,EAAoC;AACzC,MAAIC,YAAY,EAAhB;AACAC,UAAQC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACA,MAAII,MAAMJ,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAlB;AACA,MAAIK,SAAQ,EAAZ;AACA;AACA,MAAI,CAACC,MAAMC,OAAN,CAAcP,IAAd,CAAL,EAA0B;AACxBI,UAAMI,OAAOC,IAAP,CAAYT,IAAZ,KAAmB,EAAE,MAAM,IAAN,EAAY,IAAd,EAAzB;AACD,GAFD,MAEK;AACHI,UAAMJ,QAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd;AACD;AAVwC;AAAA;AAAA;;AAAA;AAWzC,yBAAuBI,GAAvB,8HAA4B;AAAA,UAAjBM,QAAiB;;AAC1B,UAAIL,WAAS,EAAb,EAAiB;AACfA,iBAASK,QAAT;AACD,OAFD,MAEK;AACHL,kBAAS,MAAIK,QAAb;AACD;AACF;AAjBwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBzCR,UAAQC,GAAR,CAAY,QAAZ,EAAqBE,MAArB;AACAJ,cAAYK,MAAMK,IAAN,CAAWZ,QAAQa,gBAAR,CAAyBP,MAAzB,CAAX,CAAZ;AACA,SAAOJ,UAAUY,GAAV,CAAc,gBAAQ;AAC3B,aAASC,WAAT,CAAqBC,EAArB,EAAyB;AACvB,UACEA,GAAGC,kBAAH,KAA0B,IAA1B,IACAZ,IAAIa,SAAJ,CAAc;AAAA,eAAKC,MAAMH,GAAGI,SAAd;AAAA,OAAd,MAA2C,CAAC,CAF9C,EAGE;AACA,eAAOL,YAAYC,GAAGC,kBAAf,CAAP;AACD,OALD,MAKM;AACJ,eAAOD,EAAP;AACD;AACF;AACD,WAAO;AACLK,gBAAShB,IAAIiB,OAAJ,CAAYC,KAAKH,SAAjB,CADJ;AAELI,YAAMD,KAAKH,SAFN;AAGL;AACAK,YAAMF,KAAKG,SAJN;AAKLC,YAAMJ,IALD;AAMLK,gBAAUb,YAAYQ,KAAKN,kBAAjB;AANL,KAAP;AAQD,GAnBM,CAAP;AAoBD;AACD;;;AAGO,SAASlB,YAAT,GAAwB;AAC7B,MAAI8B,YAAY,CAAhB;AACA,MAAIC,SAASC,eAAT,IAA4BD,SAASC,eAAT,CAAyBF,SAAzD,EAAoE;AAClEA,gBAAYC,SAASC,eAAT,CAAyBF,SAArC;AACD,GAFD,MAEO,IAAIC,SAASE,IAAb,EAAmB;AACxBH,gBAAYC,SAASE,IAAT,CAAcH,SAA1B;AACD;AACD;;AAEA,SAAOA,SAAP;AACD","file":"utils.js","sourcesContent":["/**\r\n * 获取文章目录\r\n * @param {*} element 文章根DOM\r\n * @param {*} rule    目录生成规则,默认['h1','h2','h3'];\r\n */\r\nexport function getDirectory(element,rule) {\r\n  let directory = [];\r\n  console.log('rule',rule);\r\n  let tag = rule || ['h1', 'h2', 'h3'];\r\n  let select ='';\r\n  // tag.map(_=>select=_+','+select);\r\n  if (!Array.isArray(rule)) {\r\n    tag = Object.keys(rule)||[(\"h1\", \"h2\", \"h3\")];\r\n  }else{\r\n    tag = rule || ['h1', 'h2', 'h3']\r\n  }\r\n  for (const iterator of tag) {\r\n    if (select==='') {\r\n      select = iterator;\r\n    }else{\r\n      select+= ','+iterator\r\n    }\r\n  }\r\n  console.log('select',select);\r\n  directory = Array.from(element.querySelectorAll(select));\r\n  return directory.map(item => {\r\n    function getNextNode(el) {\r\n      if (\r\n        el.nextElementSibling !== null &&\r\n        tag.findIndex(_ => _ === el.localName) === -1\r\n      ) {\r\n        return getNextNode(el.nextElementSibling);\r\n      } else{\r\n        return el;\r\n      }\r\n    }\r\n    return {\r\n      tagIndex:tag.indexOf(item.localName),\r\n      type: item.localName,\r\n      // type: \"directory-\" + item.tagName,\r\n      text: item.innerText,\r\n      node: item,\r\n      nextNode: getNextNode(item.nextElementSibling)\r\n    };\r\n  });\r\n}\r\n/**\r\n * 获取当前滚动条所在位置\r\n */\r\nexport function getScrollTop() {\r\n  let scrollTop = 0;\r\n  if (document.documentElement && document.documentElement.scrollTop) {\r\n    scrollTop = document.documentElement.scrollTop;\r\n  } else if (document.body) {\r\n    scrollTop = document.body.scrollTop;\r\n  }\r\n  // console.log('当前', scrollTop);\r\n\r\n  return scrollTop;\r\n}\r\n\r\n"]}